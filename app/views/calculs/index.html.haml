- content_for :breadcrumb do   
  %ul.horizontal_tab_submenu.js_tab_breadcrumb
    %li
      %a{:href => "#Initialization"}      Initialisation 
    %li                
      %a{:href => "#Parameters"}          Paramètres 
    %li                
      %a{:href => "#Materials"}           Matériaux 
    %li                
      %a{:href => "#Links"}               Liaisons 
    %li                
      %a{:href => "#Volumic_forces"}      Efforts volumiques
    %li                
      %a{:href => "#Boundary_Conditions"} Conditions Limites
    %li                
      %a{:href => "#Forecast"}            Prévisions


- content_for :left_list do 

  .materials
    %h2.grey Liste des pièces
    %table#pieces.data_table.grey
      %thead
        %tr
          %th ID
          %th Nom
          %th ID Matériau
      %tbody

  .links
    %h2.grey Liste des interfaces
    %table#interfaces.data_table.grey
      %thead
        %tr
          %th ID
          %th Nom
          %th ID Liaison
      %tbody

  .boundary_conditions
    %h2.grey Liste des bords
    #edges
      %table.data_table.grey
        %thead
          %tr
            %th ID
            %th Nom
            %th ID CL
        %tbody
      %button.new_edge Créer un bord

- content_for :right_list do 
  .materials
    %h2.grey Liste des Matériaux
    %ul#materials.data_list

  .links
    %h2.grey Liste des Liaisons
    %ul#links.data_list
    
  .boundary_conditions
    %h2.grey Liste des conditions aux limites
    %ul#boundary_conditions.data_list

- content_for :bottom_list do 

  .initialization
    = render "calculs/partials/calculus_list"

  .materials
    = render "calculs/partials/materials_database_view"

  .links
    = render "calculs/partials/links_database_view"
    
  .volumic_forces
    = render "calculs/partials/volumic_force_details"
    
  .boundary_conditions
    = render "calculs/partials/edge_form"
    = render "calculs/partials/boundary_condition_form"

  .options
    = render "calculs/partials/step_details"
    = render "calculs/partials/calculus_options"

- content_for :details_calcul do 

  .initialization#calcul_information
    = render "calculs/partials/calcul_information"
  .materials#edit_material
    = render "calculs/partials/material_details_part"

  .links#edit_link
    = render "calculs/partials/link_details_part"
  
- content_for :wizard_buttons do 
  .previous_button
    %a.yellow_button#wizard_previous_button Etape précédente
  .next_button
    %a.yellow_button#wizard_next_button     Etape suivante
  %div
    %a.yellow_button#return_to_model        Retour au modèle

- # TODO: Ramener dans ce fichier quand cela sera terminé. On charge dans ce partial le code de visualisation.
= render "calculs/partials/visualisation_interface"

- content_for :coffee do 
  :coffeescript
    # Initialization of data coming from database
    $ ->
      SCVisu.current_model_id = #{@model_id}
      SCVisu.current_workspace  = #{current_workspace_member.workspace_id}
      
      SCVisu.standardLibraryMaterial  = new SCModels.MaterialCollection
      SCVisu.workspaceLibraryMaterial   = new SCModels.MaterialCollection
      SCVisu.standardLibraryLink      = new SCModels.LinkCollection
      SCVisu.workspaceLibraryLink       = new SCModels.LinkCollection

      SCVisu.standardLibraryMaterial.reset #{@standard_materials.to_json.html_safe}
      SCVisu.workspaceLibraryMaterial.reset #{@workspace_materials.to_json.html_safe}

      SCVisu.standardLibraryLink.reset #{@standard_links.to_json.html_safe}
      SCVisu.workspaceLibraryLink.reset #{@workspace_links.to_json.html_safe}
      
      SCVisu.calculCollection = new SCModels.Calculs
      SCVisu.calculCollection.reset #{@calculs.to_json.html_safe}

      SCVisu.calculViews = new SCViews.CalculListView {collection: SCVisu.calculCollection}
